{"version":3,"sources":["assets/email.svg","assets/location.svg","assets/phone.svg","components/Card.js","App.js","reportWebVitals.js","index.js"],"names":["Card","useState","user","setUser","getNewUser","setNewUser","useEffect","axios","get","then","response","data","results","className","src","picture","large","alt","name","title","first","last","email","phone","cell","location","city","state","dob","age","registered","date","slice","onClick","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAAe,MAA0B,kCCA1B,MAA0B,qCCA1B,MAA0B,kC,wBCwD1BA,EAhDF,WAAO,IAAD,gBAESC,qBAFT,mBAERC,EAFQ,KAEFC,EAFE,OAGkBF,oBAAS,GAH3B,mBAGRG,EAHQ,KAGIC,EAHJ,KAMfC,qBAAU,WAENC,IAAMC,IAAI,8BAA8BC,MAAK,SAACC,GAAD,OAAcP,EAAQO,EAASC,KAAKC,QAAQ,SAE1F,CAACR,IAKJ,OACI,sBAAKS,UAAU,YAAf,UACI,sBAAKA,UAAU,iBAAf,UACI,sBAAKA,UAAU,WAAf,UACI,qBAAKC,IAAG,OAAEZ,QAAF,IAAEA,GAAF,UAAEA,EAAMa,eAAR,aAAE,EAAeC,MAAOC,IAAI,cACpC,8BAAS,OAAJf,QAAI,IAAJA,GAAA,UAAAA,EAAMgB,YAAN,eAAYC,OAAQ,KAApB,OAA0BjB,QAA1B,IAA0BA,GAA1B,UAA0BA,EAAMgB,YAAhC,aAA0B,EAAYE,OAAQ,KAA9C,OAAoDlB,QAApD,IAAoDA,GAApD,UAAoDA,EAAMgB,YAA1D,aAAoD,EAAYG,WAEzE,sBAAKR,UAAU,cAAf,UACI,sBAAKA,UAAU,OAAf,UACI,qBAAKC,IAAKQ,EAAOL,IAAI,cACrB,oBAAGJ,UAAU,YAAb,iBAA0BX,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAMoB,MAAhC,UAEJ,sBAAKT,UAAU,OAAf,UACI,qBAAKC,IAAKS,EAAON,IAAI,cACrB,oBAAGJ,UAAU,YAAb,iBAA0BX,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAMsB,KAAhC,UAEJ,sBAAKX,UAAU,OAAf,UACI,qBAAKC,IAAKW,EAAUR,IAAI,cACxB,oBAAGJ,UAAU,YAAb,WAA8B,OAAJX,QAAI,IAAJA,OAAA,EAAAA,EAAMuB,SAASC,MAAO,KAAtB,OAA4BxB,QAA5B,IAA4BA,GAA5B,UAA4BA,EAAMuB,gBAAlC,aAA4B,EAAgBE,OAAtE,UAEJ,4CAAQzB,QAAR,IAAQA,GAAR,UAAQA,EAAM0B,WAAd,aAAQ,EAAWC,OACnB,sDAAkB3B,QAAlB,IAAkBA,GAAlB,UAAkBA,EAAM4B,kBAAxB,aAAkB,EAAkBC,KAAKC,MAAM,EAAG,IAAlD,aAGR,wBAAQC,QA5BG,WACf5B,GAAYD,IA2BR,6BC9BG8B,MAXf,WAIE,OACE,qBAAKrB,UAAU,MAAf,SACE,cAAC,EAAD,OCASsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB5B,MAAK,YAAkD,IAA/C6B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.712e6044.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/email.e1f03bb9.svg\";","export default __webpack_public_path__ + \"static/media/location.0b7d98ab.svg\";","export default __webpack_public_path__ + \"static/media/phone.d017e1ae.svg\";","import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport email from '../assets/email.svg'\r\nimport location from '../assets/location.svg'\r\nimport phone from '../assets/phone.svg'\r\nimport axios from 'axios';\r\n\r\n\r\nconst Card = () => {\r\n\r\n    const [user, setUser] = useState();\r\n    const [getNewUser, setNewUser] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        axios.get('https://randomuser.me/api/').then((response) => setUser(response.data.results[0]))\r\n\r\n    }, [getNewUser]);\r\n    const changeUser = () => {\r\n        setNewUser(!getNewUser)\r\n    }\r\n    // console.log(user);\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"card-container\">\r\n                <div className=\"top-part\">\r\n                    <img src={user?.picture?.large} alt=\"user-pict\" />\r\n                    <h3>{user?.name?.title + \" \" + user?.name?.first + \" \" + user?.name?.last}</h3>\r\n                </div>\r\n                <div className=\"bottom-part\">\r\n                    <div className=\"info\">\r\n                        <img src={email} alt=\"user-pict\" />\r\n                        <p className=\"info-text\">{user?.email} </p>\r\n                    </div>\r\n                    <div className=\"info\">\r\n                        <img src={phone} alt=\"user-pict\" />\r\n                        <p className=\"info-text\">{user?.cell} </p>\r\n                    </div>\r\n                    <div className=\"info\">\r\n                        <img src={location} alt=\"user-pict\" />\r\n                        <p className=\"info-text\">{user?.location.city + \"-\" + user?.location?.state} </p>\r\n                    </div>\r\n                    <p>Age:{user?.dob?.age}</p>\r\n                    <p>Register Date:{user?.registered?.date.slice(0, 10)} </p>\r\n                </div>\r\n            </div>\r\n            <button onClick={changeUser} >Random User</button>\r\n        </div>\r\n\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Card","import './App.css';\nimport Card from './components/Card';\n\n\n\n\nfunction App() {\n\n\n\n  return (\n    <div className=\"App\">\n      <Card />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}